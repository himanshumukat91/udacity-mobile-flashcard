{"ast":null,"code":"import * as Permissions from 'expo-permissions';\nimport { Notifications } from 'expo';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nvar NOTIFICATION_KEY = 'flashcard:notifications';\nexport function clearLocalNotification() {\n  return AsyncStorage.removeItem(NOTIFICATION_KEY).then(Notifications.cancelAllScheduledNotificationsAsync);\n}\n\nfunction createNotification() {\n  return {\n    title: 'Quiz Time!',\n    body: \"Let's take the quiz of the day!\",\n    ios: {\n      sound: true\n    },\n    android: {\n      sound: true,\n      priority: 'high',\n      sticky: false,\n      vibrate: true\n    }\n  };\n}\n\nexport function setLocalNotification() {\n  AsyncStorage.getItem(NOTIFICATION_KEY).then(JSON.parse).then(function (data) {\n    if (data === null) {\n      Permissions.askAsync(Permissions.NOTIFICATIONS).then(function (_ref) {\n        var status = _ref.status;\n\n        if (status === 'granted') {\n          Notifications.cancelAllScheduledNotificationsAsync();\n          var tomorrow = new Date();\n          tomorrow.setDate(tomorrow.getDate() + 1);\n          tomorrow.setHours(22);\n          tomorrow.setMinutes(0);\n          Notifications.scheduleLocalNotificationAsync(createNotification(), {\n            time: tomorrow,\n            repeat: 'day'\n          });\n          AsyncStorage.setItem(NOTIFICATION_KEY, JSON.stringify(true));\n        }\n      });\n    }\n  });\n}","map":{"version":3,"sources":["/Users/himanshumukat/Documents/workspace/personal/udacity-mobile-flashcard/src/utils/helpers.js"],"names":["Permissions","Notifications","NOTIFICATION_KEY","clearLocalNotification","AsyncStorage","removeItem","then","cancelAllScheduledNotificationsAsync","createNotification","title","body","ios","sound","android","priority","sticky","vibrate","setLocalNotification","getItem","JSON","parse","data","askAsync","NOTIFICATIONS","status","tomorrow","Date","setDate","getDate","setHours","setMinutes","scheduleLocalNotificationAsync","time","repeat","setItem","stringify"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;AACA,SAASC,aAAT,QAA8B,MAA9B;;AAGA,IAAMC,gBAAgB,GAAG,yBAAzB;AAEA,OAAO,SAASC,sBAAT,GAAmC;AACtC,SAAOC,YAAY,CAACC,UAAb,CAAwBH,gBAAxB,EACJI,IADI,CACCL,aAAa,CAACM,oCADf,CAAP;AAEH;;AAED,SAASC,kBAAT,GAA+B;AAC3B,SAAO;AACHC,IAAAA,KAAK,EAAE,YADJ;AAEHC,IAAAA,IAAI,EAAE,iCAFH;AAGHC,IAAAA,GAAG,EAAE;AACDC,MAAAA,KAAK,EAAE;AADN,KAHF;AAMHC,IAAAA,OAAO,EAAE;AACLD,MAAAA,KAAK,EAAE,IADF;AAELE,MAAAA,QAAQ,EAAE,MAFL;AAGLC,MAAAA,MAAM,EAAE,KAHH;AAILC,MAAAA,OAAO,EAAE;AAJJ;AANN,GAAP;AAaH;;AAGD,OAAO,SAASC,oBAAT,GAAiC;AACpCb,EAAAA,YAAY,CAACc,OAAb,CAAqBhB,gBAArB,EACKI,IADL,CACUa,IAAI,CAACC,KADf,EAEKd,IAFL,CAEU,UAACe,IAAD,EAAU;AACZ,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACnBrB,MAAAA,WAAW,CAACsB,QAAZ,CAAqBtB,WAAW,CAACuB,aAAjC,EACKjB,IADL,CACU,gBAAgB;AAAA,YAAbkB,MAAa,QAAbA,MAAa;;AAClB,YAAIA,MAAM,KAAK,SAAf,EAA0B;AACtBvB,UAAAA,aAAa,CAACM,oCAAd;AAEA,cAAIkB,QAAQ,GAAG,IAAIC,IAAJ,EAAf;AACAD,UAAAA,QAAQ,CAACE,OAAT,CAAiBF,QAAQ,CAACG,OAAT,KAAqB,CAAtC;AACAH,UAAAA,QAAQ,CAACI,QAAT,CAAkB,EAAlB;AACAJ,UAAAA,QAAQ,CAACK,UAAT,CAAoB,CAApB;AAEA7B,UAAAA,aAAa,CAAC8B,8BAAd,CACIvB,kBAAkB,EADtB,EAEI;AACEwB,YAAAA,IAAI,EAAEP,QADR;AAEEQ,YAAAA,MAAM,EAAE;AAFV,WAFJ;AAOA7B,UAAAA,YAAY,CAAC8B,OAAb,CAAqBhC,gBAArB,EAAuCiB,IAAI,CAACgB,SAAL,CAAe,IAAf,CAAvC;AACH;AACJ,OAnBL;AAoBC;AACN,GAzBH;AA0BD","sourcesContent":["import * as Permissions from 'expo-permissions'\nimport { Notifications } from 'expo';\nimport { AsyncStorage } from 'react-native'\n\nconst NOTIFICATION_KEY = 'flashcard:notifications'\n\nexport function clearLocalNotification () {\n    return AsyncStorage.removeItem(NOTIFICATION_KEY)\n      .then(Notifications.cancelAllScheduledNotificationsAsync)\n}\n\nfunction createNotification () {\n    return {\n        title: 'Quiz Time!',\n        body: \"Let's take the quiz of the day!\",\n        ios: {\n            sound: true,\n        },\n        android: {\n            sound: true,\n            priority: 'high',\n            sticky: false,\n            vibrate: true,\n        }\n    }\n}\n\n// To set a notification for 10PM the next day\nexport function setLocalNotification () {\n    AsyncStorage.getItem(NOTIFICATION_KEY)\n        .then(JSON.parse)\n        .then((data) => {\n            if (data === null) {\n            Permissions.askAsync(Permissions.NOTIFICATIONS)\n                .then(({ status }) => {\n                    if (status === 'granted') {\n                        Notifications.cancelAllScheduledNotificationsAsync()\n        \n                        let tomorrow = new Date()\n                        tomorrow.setDate(tomorrow.getDate() + 1)\n                        tomorrow.setHours(22)\n                        tomorrow.setMinutes(0)\n        \n                        Notifications.scheduleLocalNotificationAsync(\n                            createNotification(),\n                            {\n                              time: tomorrow,\n                              repeat: 'day',\n                            }\n                        )\n                        AsyncStorage.setItem(NOTIFICATION_KEY, JSON.stringify(true))\n                    }\n                })\n            }\n      })\n  }"]},"metadata":{},"sourceType":"module"}